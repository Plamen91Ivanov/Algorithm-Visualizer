{"version":3,"sources":["logo.svg","components/SearchAlgorithm/SearchAlgorithm.js","components/Pathfinding/Pathfinding.js","components/SnakeBot/Snake.js","App.js","reportWebVitals.js","index.js"],"names":["SearchAlgorithm","props","useState","isEditing","setIsEditing","startEditingHandler","className","onClick","App","Pathfinding","Snake","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAAe,I,mBC4BAA,EA1BS,SAACC,GACvB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEQC,EAAsB,WACxBD,GAAa,IAOjB,OACI,sBAAKE,UAAU,cAAf,WACEH,GACA,wBAAQI,QAASF,EAAjB,6BAEDF,GACC,gCACG,wBAAQI,QAASF,EAAjB,6BACD,2CCOGL,EA1BS,SAACC,GACvB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEQC,EAAsB,WACxBD,GAAa,IAOjB,OACI,sBAAKE,UAAU,cAAf,WACEH,GACA,wBAAQI,QAASF,EAAjB,6BAEDF,GACC,gCACG,wBAAQI,QAASF,EAAjB,6BACD,2CCOGL,EA1BS,SAACC,GACvB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEQC,EAAsB,WACxBD,GAAa,IAOjB,OACI,sBAAKE,UAAU,cAAf,WACEH,GACA,wBAAQI,QAASF,EAAjB,6BAEDF,GACC,gCACG,wBAAQI,QAASF,EAAjB,6BACD,2CCFGG,MAZf,WACE,OACE,sBAAKF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACG,EAAD,IACA,cAACC,EAAD,IACA,qBAAKJ,UAAU,uBCDNK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7efbccb1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\n\r\nconst SearchAlgorithm = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n    \r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n      };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n        {!isEditing && (\r\n          <button onClick={startEditingHandler}>Add New Expense</button>\r\n        )}\r\n        {isEditing && (\r\n          <div>\r\n             <button onClick={startEditingHandler}>Add New Expense</button>\r\n            <h1>h1</h1>\r\n          </div>           \r\n        )}\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default SearchAlgorithm;","import React, { useState } from 'react';\r\n\r\nconst SearchAlgorithm = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n    \r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n      };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n        {!isEditing && (\r\n          <button onClick={startEditingHandler}>Add New Expense</button>\r\n        )}\r\n        {isEditing && (\r\n          <div>\r\n             <button onClick={startEditingHandler}>Add New Expense</button>\r\n            <h1>h1</h1>\r\n          </div>           \r\n        )}\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default SearchAlgorithm;","import React, { useState } from 'react';\r\n\r\nconst SearchAlgorithm = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n    \r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n      };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n        {!isEditing && (\r\n          <button onClick={startEditingHandler}>Add New Expense</button>\r\n        )}\r\n        {isEditing && (\r\n          <div>\r\n             <button onClick={startEditingHandler}>Add New Expense</button>\r\n            <h1>h1</h1>\r\n          </div>           \r\n        )}\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default SearchAlgorithm;","import logo from './logo.svg';\nimport './App.css';\n\nimport SearchAlgorithm from './components/SearchAlgorithm/SearchAlgorithm';\nimport Pathfinding from './components/Pathfinding/Pathfinding';\nimport Snake from './components/SnakeBot/Snake';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchAlgorithm></SearchAlgorithm>\n      <Pathfinding></Pathfinding>\n      <Snake></Snake>\n      <div className=\"card-container\"></div>\n    </div>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}